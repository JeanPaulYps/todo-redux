{"version":3,"sources":["Components/TodoCounter/index.js","Reducers/SearchSlice.js","Reducers/ModalSlice.js","Components/TodoSearch/index.js","Reducers/ToDoSlice.js","Components/TodoModal/Modal.js","Components/TodoModal/index.js","Components/TodoTask/index.js","Components/TodoTaskList/index.js","Components/App/AppUI.js","Components/App/index.js","index.js"],"names":["TodoCounter","todosList","totalTodos","length","completedTodos","filter","todo","completed","class","SearchSlice","createSlice","text","updateSearchText","state","action","payload","addTaskModalSlice","name","initialState","modalIsOpen","reducers","changeVisibilityOfModal","TodoSearch","dispatch","useDispatch","actions","className","id","src","process","alt","type","placeholder","onChange","event","newSearchText","target","value","onClick","todosLocalStorageName","initialTodoList","saveNewTodoList","newTodos","todoList","localStorage","setItem","JSON","stringify","getItem","parse","toDoSlice","checkTask","index","todoIsComplete","deleteTask","splice","addTask","newTodo","description","push","Modal","React","useState","taskDescription","setTaskDescription","onClickCloseButton","onSubmit","TodoModal","ReactDom","createPortal","document","getElementById","TodoTask","taskIsDone","taskId","console","log","checked","width","TodoTaskList","todoTask","AppUI","useSelector","searchText","search","addTaskModal","searchedTodos","toLowerCase","includes","map","store","configureStore","reducer","App","ReactDOM","render"],"mappings":"4SAGA,SAASA,EAAT,GAAqC,IAAbC,EAAY,EAAZA,UACdC,EAAaD,EAAUE,OACvBC,EAAiBH,EAAUI,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,aAAWJ,OAEjE,OACI,qBAAIK,MAAM,QAAV,4BAAkCJ,EAAlC,OAAsDF,EAAtD,c,iBCNFO,EAAcC,YAAY,CAC5B,KAAQ,SACR,aAAgB,CAACC,KAAM,IACvB,SAAY,CACRC,iBADQ,SACUC,EAAOC,GACrBD,EAAMF,KAAOG,EAAOC,Y,OCL1BC,EAAoBN,YAAY,CAClCO,KAAM,eACNC,aAAc,CACVC,aAAa,GAEjBC,SAAU,CACNC,wBADM,SACmBR,GACrBA,EAAMM,aAAeN,EAAMM,gBCHvC,SAASG,IACL,IAAMC,EAAWC,cACTZ,EAAqBH,EAAYgB,QAAjCb,iBACAS,EAA4BL,EAAkBS,QAA9CJ,wBAaR,OACI,sBAAKK,UAAU,SAASC,GAAG,OAA3B,UACI,sBAAKD,UAAU,eAAf,UACI,qBAAKE,IAAKC,6BAA4CC,IAAI,GAAGJ,UAAU,iBACvE,uBAAOK,KAAK,SAASJ,GAAG,aAAaD,UAAU,gBAAgBM,YAAY,yBAAsBC,SAVlF,SAACC,GAExB,IAAMC,EAAgBD,EAAME,OAAOC,MACnCd,EAAUX,EAAiBuB,UASvB,qBAAKP,IAAKC,2BAA0CC,IAAI,GAAGJ,UAAU,qBAAqBC,GAAG,YAAYW,QAjB/F,WAEdf,EAAUF,W,WCXZkB,G,MAAwB,YAC1BC,EAAkB,GAEhBC,EAAkB,SAAC5B,GAErB,IAAM6B,EAAW7B,EAAM8B,SACvBC,aAAaC,QAAQN,EAAuBO,KAAKC,UAAUL,KAIX,OAAhDE,aAAaI,QAAQT,GAEvBK,aAAaC,QAAQN,EAAuB,OAG5CC,EAAkBI,aAAaI,QAAQT,GACvCC,EAAkBM,KAAKG,MAAMT,IAI/B,IAAMU,EAAYxC,YAAY,CAC1BO,KAAM,WACNC,aAAc,CACVyB,SAAUH,GAEdpB,SAAU,CACN+B,UADM,SACKtC,EAAOC,GACd,IAAMsC,EAAQtC,EAAOC,QACfsC,EAAiBxC,EAAM8B,SAASS,GAAO7C,UAC7CM,EAAM8B,SAASS,GAAO7C,WAAa8C,EAEnCZ,EAAgB5B,IAEpByC,WARM,SAQKzC,EAAOC,GACd,IAAMsC,EAAQtC,EAAOC,QACrBF,EAAM8B,SAASY,OAAOH,EAAO,GAE7BX,EAAgB5B,IAEpB2C,QAdM,SAcG3C,EAAOC,GACZ,IAAM2C,EAAU,CACZC,YAAa5C,EAAOC,QACpBR,WAAW,EACXoB,GAAId,EAAM8B,SAASxC,QAEvBU,EAAM8B,SAASgB,KAAKF,GAEpBhB,EAAgB5B,OC1C5B,SAAS+C,IAEL,MAA8CC,IAAMC,SAAS,IAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMzC,EAAWC,cACTH,EAA4BL,EAAkBS,QAA9CJ,wBACAmC,EAAYN,EAAUzB,QAAtB+B,QAEFS,EAAqB,WAExB1C,EAASF,MAeZ,OACI,qBAAKK,UAAU,QAAQC,GAAG,QAA1B,SACI,sBAAKD,UAAU,iBAAf,UACI,qBAAKE,IAAKC,8BAA6CC,IAAI,GAAGQ,QAAW2B,EAAqBvC,UAAU,2BACxG,sBAAKA,UAAU,aAAf,UACI,mBAAGA,UAAU,oBAAb,oCACA,uBAAMwC,SAAUV,EAAhB,UACI,0BAAU9B,UAAU,uBAAuBT,KAAK,kBAAkBgB,SAb1D,SAACC,GAEzB8B,EAAmB9B,EAAME,OAAOC,UAahB,sBAAKX,UAAU,sBAAf,UACI,wBAAQA,UAAU,qBAAqBK,KAAK,SAASO,QAAU2B,EAA/D,sBACA,wBAAQvC,UAAU,qBAAqBK,KAAK,SAASO,QAvBxD,SAACJ,GAElBX,EAASiC,EAAQO,IACjBxC,EAASF,MAoBW,2CCtC5B,SAAS8C,IAEL,OAAOC,IAASC,aACZ,cAAC,EAAD,IACAC,SAASC,eAAe,U,MCJhC,SAASC,EAAT,GAA0D,IAAvCT,EAAsC,EAAtCA,gBAAiBU,EAAqB,EAArBA,WAAYC,EAAS,EAATA,OAC5C,EAAkCxB,EAAUzB,QAApC0B,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,WACb/B,EAAWC,cACjB,OACI,sBAAKE,UAAU,OAAf,UACUiD,QAAQC,IAAK1B,EAAUzB,SACzB,qBAAKG,IAAKC,4BAA2CC,IAAI,GAAGJ,UAAU,kBAAkBY,QAAU,kBAAMf,EAAS4B,EAAUuB,OAC3H,uBAAOlE,MAAM,cAAcuB,KAAK,WAAWM,MAAM,GAAGwC,QAASJ,IAC7D,qBAAK/C,UAAU,oBAAf,SACI,4BAAIqC,MAER,qBAAKnC,IAAKC,6BAA4CC,IAAI,GAAGgD,MAAM,OAAOpD,UAAU,mBAAmBY,QAAW,kBAAMf,EAAS+B,EAAWoB,U,MCb5J,SAASK,EAAT,GAAmE,IAAD,IAAzCC,SAAYtB,EAA6B,EAA7BA,YAAanD,EAAgB,EAAhBA,UAAWoB,EAAK,EAALA,GACzD,OACI,qBAAKD,UAAU,iBAAf,SACI,cAAC,EAAD,CAAWqC,gBAAmBL,EAAae,WAAclE,EAAWmE,OAAU/C,MCC1F,SAASsD,IAEL,IAAMhF,EAAYiF,aAAY,SAAArE,GAAK,OAAIA,EAAMP,KAAKqC,YAC5CwC,EAAaD,aAAY,SAAArE,GAAK,OAAIA,EAAMuE,OAAOzE,QAC/CQ,EAAc+D,aAAY,SAAArE,GAAK,OAAIA,EAAMwE,aAAalE,eAEtDmE,EAAgBrF,EAAUI,QAAO,SAACC,GAAD,OAAUA,EAAKoD,YAAY6B,cAAcC,SAASL,EAAWI,kBAGpG,OACI,gCACI,cAACvF,EAAD,CAAaC,UAAaA,IAC1B,cAAC,EAAD,IAGIqF,EAAcG,KAAK,SAACnF,GAChB,OAAO,cAAC,EAAD,CAAc0E,SAAU1E,OAItCa,GAAe,cAACgD,EAAD,OCnB5B,IAAMuB,EAAQC,YAAe,CAC3BC,QAAQ,CACN,KAAQ1C,EAAU0C,QAClB,OAAUnF,EAAYmF,QACtB,aAAgB5E,EAAkB4E,WAKtC,SAASC,IAEP,OACE,cAAC,IAAD,CAAUH,MAAUA,EAApB,SACI,cAACT,EAAD,MChBRa,IAASC,OACL,cAACF,EAAD,IACFvB,SAASC,eAAe,W","file":"static/js/main.39ee39da.chunk.js","sourcesContent":["import React from 'react';\r\nimport './todoCounter.css';\r\n\r\nfunction TodoCounter ( {todosList} ){\r\n    const totalTodos = todosList.length;\r\n    const completedTodos = todosList.filter( todo => todo.completed).length;\r\n\r\n    return (\r\n        <h1 class=\"Title\">Haz completado {completedTodos} de {totalTodos} tareas </h1>\r\n    );\r\n}\r\n\r\nexport { TodoCounter, };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst SearchSlice = createSlice({\r\n    'name': 'search', \r\n    'initialState': {text: ''} ,\r\n    'reducers': {\r\n        updateSearchText (state, action){\r\n            state.text = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport { SearchSlice, };","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst addTaskModalSlice = createSlice({\r\n    name: 'addTaskModal',\r\n    initialState: {\r\n        modalIsOpen: false,\r\n    },\r\n    reducers: {\r\n        changeVisibilityOfModal (state) {\r\n            state.modalIsOpen = !state.modalIsOpen;\r\n        }\r\n    }\r\n})\r\n\r\nexport { addTaskModalSlice, }","import React from 'react';\r\nimport './TodoSearch.css'\r\nimport { SearchSlice } from '../../Reducers/SearchSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTaskModalSlice } from '../../Reducers/ModalSlice';\r\n\r\nfunction TodoSearch (){\r\n    const dispatch = useDispatch();\r\n    const { updateSearchText } = SearchSlice.actions;\r\n    const { changeVisibilityOfModal } = addTaskModalSlice.actions;\r\n    \r\n    const showModal = ()=>\r\n    {\r\n        dispatch( changeVisibilityOfModal());\r\n    }\r\n\r\n    const handleSearchChange = (event) =>\r\n    {\r\n        const newSearchText = event.target.value;\r\n        dispatch( updateSearchText(newSearchText) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"Search\" id=\"test\">\r\n            <div className=\"Search__Form\" >\r\n                <img src={process.env.PUBLIC_URL + \"/searchIcon.svg\"} alt=\"\" className=\"Search__Icon\"/>\r\n                <input type=\"search\" id=\"SearchForm\" className=\"Search__Input\" placeholder=\"Busca tu tarea aquÃ­\" onChange = {handleSearchChange } />\r\n            </div>\r\n            <img src={process.env.PUBLIC_URL + \"/plusIcon.svg\"} alt=\"\" className=\"Search__PlusButton\" id=\"AddButton\" onClick = {showModal} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { TodoSearch, };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todosLocalStorageName = 'TODOS_V1';\r\nlet initialTodoList = [];\r\n\r\nconst saveNewTodoList = (state) => \r\n{\r\n    const newTodos = state.todoList;\r\n    localStorage.setItem(todosLocalStorageName, JSON.stringify(newTodos));\r\n}\r\n\r\n\r\nif (localStorage.getItem(todosLocalStorageName) === null)\r\n{\r\n  localStorage.setItem(todosLocalStorageName, \"[]\");\r\n} else \r\n{\r\n  initialTodoList = localStorage.getItem(todosLocalStorageName); \r\n  initialTodoList = JSON.parse(initialTodoList);\r\n}\r\n\r\n\r\nconst toDoSlice = createSlice({\r\n    name: 'todoList',\r\n    initialState: {\r\n        todoList: initialTodoList\r\n    },\r\n    reducers: {\r\n        checkTask (state, action) {\r\n            const index = action.payload;\r\n            const todoIsComplete = state.todoList[index].completed;\r\n            state.todoList[index].completed = !todoIsComplete;\r\n\r\n            saveNewTodoList(state);\r\n        },\r\n        deleteTask(state, action) {\r\n            const index = action.payload;\r\n            state.todoList.splice(index, 1);\r\n\r\n            saveNewTodoList(state);\r\n        },\r\n        addTask (state, action) {\r\n            const newTodo = {\r\n                description: action.payload,\r\n                completed: false,\r\n                id: state.todoList.length\r\n            }\r\n            state.todoList.push(newTodo);\r\n            \r\n            saveNewTodoList(state);\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport { toDoSlice, }","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './Modal.css';\r\nimport { addTaskModalSlice } from '../../Reducers/ModalSlice';\r\nimport { toDoSlice } from '../../Reducers/ToDoSlice';\r\n\r\n\r\nfunction Modal() {\r\n    // const {addTask} = React.useContext(TodoContext);\r\n    const [taskDescription, setTaskDescription ]= React.useState('');\r\n    \r\n    const dispatch = useDispatch();\r\n    const { changeVisibilityOfModal } = addTaskModalSlice.actions;\r\n    const { addTask } = toDoSlice.actions;\r\n\r\n    const onClickCloseButton = () => \r\n    {\r\n       dispatch(changeVisibilityOfModal());\r\n    }\r\n\r\n    const handleSubmit = (event) => \r\n    {\r\n        dispatch(addTask(taskDescription));\r\n        dispatch(changeVisibilityOfModal());\r\n    }\r\n\r\n    const saveTaskDescription = (event) =>\r\n    {\r\n        setTaskDescription(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Modal\" id=\"modal\" >\r\n            <div className=\"Modal__Content\">\r\n                <img src={process.env.PUBLIC_URL + \"/closeButton.svg\"} alt=\"\" onClick= { onClickCloseButton } className=\"Modal__CloseButtonIcon\"/>\r\n                <div className=\"CreateTodo\">\r\n                    <p className=\"CreateTodo__Title\">Escribe un nuevo To-Do</p>\r\n                    <form onSubmit={addTask}> \r\n                        <textarea className=\"CreateTodo__TextArea\" name=\"todoDescription\" onChange={saveTaskDescription}>\r\n                        </textarea>\r\n                        <div className=\"CreateTodo__Buttons\">\r\n                            <button className=\"CreateTodo__Cancel\" type=\"button\" onClick={ onClickCloseButton }>Cancelar</button>\r\n                            <button className=\"CreateTodo__Accept\" type=\"button\" onClick={ handleSubmit }  > Agregar tarea </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Modal, };","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport  { Modal } from './Modal'\r\n\r\n\r\nfunction TodoModal ()\r\n{\r\n    return ReactDom.createPortal(\r\n        <Modal /> ,\r\n        document.getElementById('Modal')\r\n    );   \r\n}\r\n\r\nexport { TodoModal, };","import React from 'react';\r\nimport './TodoTask.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { toDoSlice } from '../../Reducers/ToDoSlice'\r\n\r\nfunction TodoTask({taskDescription, taskIsDone, taskId}) {\r\n    const { checkTask, deleteTask } = toDoSlice.actions;\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"Task\">\r\n                { console.log( toDoSlice.actions) }\r\n                <img src={process.env.PUBLIC_URL + '/checkIcon.svg'} alt=\"\" className=\"Task__CheckIcon\" onClick={ () => dispatch(checkTask(taskId)) }/>\r\n                <input class=\"Task__Check\" type=\"checkbox\" value=\"\" checked={taskIsDone}/>\r\n                <div className=\"Task__Description\">\r\n                    <p>{taskDescription}</p>\r\n                </div>\r\n                <img src={process.env.PUBLIC_URL + '/deleteIcon.svg'} alt=\"\" width=\"10px\" className=\"Task__DeleteIcon\" onClick = {() => dispatch(deleteTask(taskId))} />\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport { TodoTask, };","import { TodoTask } from '../TodoTask';\r\nimport './TodoTaskList.css'\r\n\r\nfunction TodoTaskList ({ todoTask: { description, completed, id}}){\r\n    return(\r\n        <div className=\"TasksContainer\">\r\n            <TodoTask  taskDescription = {description} taskIsDone = {completed} taskId = {id} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TodoTaskList, };","import { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoModal } from '../TodoModal';\r\nimport { TodoTaskList } from '../TodoTaskList';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction AppUI() {\r\n\r\n    const todosList = useSelector(state => state.todo.todoList );\r\n    const searchText = useSelector(state => state.search.text);\r\n    const modalIsOpen = useSelector(state => state.addTaskModal.modalIsOpen);\r\n   \r\n    const searchedTodos = todosList.filter((todo) => todo.description.toLowerCase().includes(searchText.toLowerCase()));\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TodoCounter todosList = {todosList} />\r\n            <TodoSearch />\r\n\r\n            {\r\n                searchedTodos.map( (todo) => {\r\n                    return <TodoTaskList todoTask={todo}/>;\r\n                })\r\n            }\r\n\r\n            {modalIsOpen && <TodoModal />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { AppUI, };","import { AppUI } from './AppUI';\r\nimport React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { Provider } from 'react-redux';\r\nimport { toDoSlice } from '../../Reducers/ToDoSlice';\r\nimport { SearchSlice } from '../../Reducers/SearchSlice';\r\nimport { addTaskModalSlice } from '../../Reducers/ModalSlice';\r\n\r\nconst store = configureStore({\r\n  reducer:{ \r\n    'todo': toDoSlice.reducer,\r\n    'search': SearchSlice.reducer,\r\n    'addTaskModal': addTaskModalSlice.reducer\r\n  }\r\n})\r\n\r\n\r\nfunction App ()\r\n{\r\n  return(\r\n    <Provider store = { store }>  \r\n        <AppUI/>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { App, } ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './Components/App/index'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n "],"sourceRoot":""}